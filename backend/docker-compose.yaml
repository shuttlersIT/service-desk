version: '3.8'

services:
  servicedesk:
    restart: always
    container_name: servicedesk
    build:
      dockerfile: Dockerfile
      context: .
    env_file:
      - .env
    ports:
      - "7788:7788"
    environment:
      VIRTUAL_HOST: 'servicedesk.shuttlers.africa'
      LETSENCRYPT_HOST: 'servicedesk.shuttlers.africa'
      MYSQLUSER: 'docker'
      MYSQLPASSWORD: 'itrootpassword'
    volumes:
      - .:/app  # Mount code into the container
    depends_on:
      - redisDB
      - db
    networks:
      - backend_network

  redisDB:
    image: redis:7.0.5-alpine
    container_name: redisDB
    restart: always
    ports:
      - "6369:6369"
    environment:
      - REDIS_REPLICATION_MODE=master
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - backend_network

  db:
    image: mysql:5.7
    restart: always
    container_name: db
    environment:
      MYSQL_DATABASE: "itsm"
      MYSQL_USER: "docker"
      MYSQL_PASSWORD: "itrootpassword"
      MYSQL_ROOT_PASSWORD: "itrootpassword"
    ports:
      - "4306:3306"
    expose:
      - '3306'
    volumes:
      - itsm:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "docker", "-pitrootpassword"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - backend_network

# Define a named volume for MySQL data
volumes:
  itsm:

# Define a custom network
networks:
  backend_network:
