version: '3.8'

services:
  servicedesk:
    restart: always
    container_name: servicedesk
    build:
      dockerfile: Dockerfile
      context: .
    ports:
      - '127.0.0.1:7788:7788'
      - '127.0.0.1:7799:7799'
      - '127.0.0.1:6677:6677'
      - '127.0.0.1:6688:6688'
    environment:
      - VIRTUAL_HOST=servicedesk.shuttlers.africa
      - LETSENCRYPT_HOST=servicedesk.shuttlers.africa
    volumes:
      - .:/app  # Mount your code into the container, adjust path accordingly
    depends_on:
      - redisDB
      - db

  redisDB:
    image: redis:7.0.5-alpine
    container_name: redisDB
    restart: always
    ports:
      - '127.0.0.1:6369:6369'
    environment:
      - REDIS_REPLICATION_MODE=master
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 10

  db:
    image: mysql:5.7
    restart: always
    container_name: db
    environment:
      MYSQL_DATABASE: 'itsm'
      MYSQL_USER: 'it'
      MYSQL_PASSWORD: '1T$hutt!ers'
      MYSQL_ROOT_PASSWORD: '1T$hutt!ers'
    ports:
      - '127.0.0.1:4306:3306'  # Map host port 3308 to container port 3307
    expose:
      - '3306'
    volumes:
      - itsm:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "it", "-p1T$hutt!ers"]
      interval: 5s
      timeout: 5s
      retries: 10

# Define a named volume for MySQL data
volumes:
  itsm:

# Add any additional services or configurations as needed
