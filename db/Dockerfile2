# Build Stage
FROM golang:alpine AS builder

WORKDIR /Users/itplatforms/Dev/Projects/service-desk/backend

ENV GO111MODULE=on \
    GIN_MODE=release

# Copy go.mod and go.sum first for efficient caching
COPY go.mod go.sum ./
# Uncomment the following line if you want to run 'go mod tidy'
# RUN go mod tidy

COPY . .

# Install necessary dependencies
RUN apk --no-cache add gcc g++ make

# Build the binary
RUN CGO_ENABLED=0 go build -o /backend .

# Final Stage
FROM alpine:latest

RUN apk --no-cache add ca-certificates

ENV GO111MODULE=on \
    GIN_MODE=release

WORKDIR /app

COPY --from=builder /backend .

# Create non-root user
RUN addgroup -g 1001 docker && \
    adduser -S -u 1001 -G docker docker

RUN chown -R docker:docker /app && \
    chmod 755 /app/backend

USER docker:docker

EXPOSE 4306

EXPOSE 3306

EXPOSE 7788

ENTRYPOINT ["./backend"]