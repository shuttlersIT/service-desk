version: '3.6'
services:
  servicedesk:
    restart: always
    container_name: servicedesk
    build:
      dockerfile: Dockerfile
      context: .
    ports:
      - '127.0.0.1:7788:7788'
      - '127.0.0.1:3307:3307'
    environment:
      - VIRTUAL_HOST=servicedesk.shuttlers.africa
      - LETSENCRYPT_HOST=servicedesk.shuttlers.africa
    volumes:
      - .:/Users/itplatforms/Dev/Projects/service-desk/backend
      - .:/src
      - .:/var/www
    depends_on:
      - redisDB
      - db

  redisDB:
    image: redis:7.0.5-alpine
    container_name: redisDB
    restart: always
    #volumes:
    #  - /root/redis/servicedesk/data:/data
    ports:
      - '127.0.0.1:6369:6369'
    environment:
     - REDIS_REPLICATION_MODE=master
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 10    

  db:
    image: mysql:5.7
    restart: always
    container_name: db
    environment:
      MYSQL_DATABASE: 'itsm'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'it'
      # You can use whatever password you like
      MYSQL_PASSWORD: '1T$hutt!ers'
      # Password for root access
      MYSQL_ROOT_PASSWORD: '1T$hutt!ers'
    ports:
      - '127.0.0.1:3308:3306'  # Change the host port here
      # <Port exposed> : <MySQL Port running inside container>
      
    expose:
      # Opens port 3306 on the container
      - '3307'
      # Where our data will be persisted
    volumes:
      - itsm:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "it", "-p1T$hutt!ers"]
      interval: 5s
      timeout: 5s
      retries: 10  
# Names our volume
volumes:
  itsm:    